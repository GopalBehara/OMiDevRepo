# Databricks notebook source
import re

#############################################################
# Setting default values
#############################################################
schema_si_dwh = "`omi-catalog`.si_dwh"
schema_si_dm = "`omi-catalog`.si_dm"
schema_si_dm_stg = "`omi-catalog`.si_dm_stg"
schema_tia_ods = "`omi-catalog`.tia_ods"

default_timestamp = "to_timestamp('1900-01-01 00:00:00')"
default_date = "to_date('9999-12-31', 'yyyy-mm-dd')"

v_last_ts = "to_timestamp('1900-01-01 00:00:00')"
gv_cus_id = 12345
gv_ses_id = 12345
v_policy_status = "\'P\'"
p_policy_no = "1111"
job_start_time = "to_timestamp('1900-01-01 00:00:00')"
v_business_start_date = "to_timestamp('1900-01-01 00:00:00')"

v_aud_src_sys_nm = " "
v_aud_batch_id = 1
v_aud_sub_batch_id = 1
v_aud_ins_batch_id = 1
v_aud_ins_sub_batch_id = 1

incr_load_ind = 0

# COMMAND ----------

spark.sql(f"""truncate table {schema_si_dwh}.CLAIMS_DETAILS""").show()

# COMMAND ----------

spark.sql(f"""select * from {schema_si_dwh}.CLAIMS_DETAILS""").show()

# COMMAND ----------

spark.sql(f"""INSERT INTO {schema_si_dwh}.CLAIMS_DETAILS 
    (AUD_BATCH_ID,
	AUD_IU_FLAG,
	AUD_SRC_SYS_CD,
	AUD_SRC_SYS_ID,
	AUD_SRC_SYS_NM,
	AUD_SRC_SYS_UPDT_VER_ID,
	AUD_SUB_BATCH_ID,
	CASE_TYPE_CD,
	CASE_TYPE_DESC,
	CLAIM_APPROVAL_DT,
	CLAIM_CD,
	CLAIM_CLOSE_REASON_CD,
	CLAIM_CLOSE_REASON_DESC,
	CLAIM_DECLINED_DT,
	CLAIM_DECLINED_REASON_CD,
	CLAIM_DECLINED_REASON_COMMENT,
	CLAIM_DECLINED_REASON_DESC,
	CLAIM_DESC,
	CLAIM_ID,
	CLAIM_NUM,
	CLAIM_REGISTRATION_DT,
	CLAIM_REPORTED_DT,
	CLAIM_REPORTED_MODE_CD,
	CLAIM_REPORTED_MODE_DESC,
	CLAIM_SETTLEMENT_DT,
	CLAIM_STATUS_CD,
	CLAIM_STATUS_DESC,
	CLAIM_STATUS_DT,
	CLAIM_SUBCLAIM_IND,
	CLAIM_TYPE_CD,
	CLAIM_TYPE_DESC,
	COMPANY_ID,
	CONTRACT_VERSION_ID,
	CONTRACT_YEAR,
	DATE_OF_LOSS,
	EVENT_ADDRESS_ID,
	EVENT_ADDRESS_NUM,
	EVENT_DESC,
	EVENT_ID,
	EVENT_LOCATION_TYPE_CD,
	EVENT_LOCATION_TYPE_DESC,
	EXTERNAL_CLAIM_NUM,
	INSERT_DATE,
	INSERT_USER,
	LAST_UPDATE_DATE,
	LAST_UPDATE_USER,
	LOB_CD,
	LOB_DESC,
	PRODUCT_CD,
	PRODUCT_DESC,
	REOPEN_REASON,
	TOTAL_CLAIM_AMT_REPORTED_HOME_CUR,
	TOTAL_CLAIM_AMT_REPORTED_TRAN_CUR,
	TRANS_CURRENCY_CD,
	TRANS_CURRENCY_DESC,
	AUD_TRAN_DT)
SELECT
  33 AS AUD_BATCH_ID,
  0 AS AUD_IU_FLAG,
  cast(NULL as varchar(255)) AS AUD_SRC_SYS_CD,
  CAST (CONCAT(CLA_CASE_NO, '|', '101', '|', 'TIA') as varchar(500)) AS AUD_SRC_SYS_ID,
    'TIA' AS AUD_SRC_SYS_NM,
    CLA_CASE.RECORD_VERSION :: INTEGER AS AUD_SRC_SYS_UPDT_VER_ID,
    2 AS AUD_SUB_BATCH_ID,
    cast(CLA_CASE.CASE_TYPE as varchar(500)) AS CASE_TYPE_CD,
    cast(MST_CLA_CASE_TYPE.DESCRIPTION as varchar(500)) AS CASE_TYPE_DESC,
    cast(NULL as timestamp) AS CLAIM_APPROVAL_DT,
    cast(NULL as varchar(255)) AS CLAIM_CD,
    cast(CLA_CASE.CLOSE_CODE as varchar(500)) AS CLAIM_CLOSE_REASON_CD,
    cast(MST_CLA_CLOSE_CODE.DESCRIPTION as varchar(500)) AS CLAIM_CLOSE_REASON_DESC,
    CASE
      WHEN CLA_CASE.STATUS = 'DC' THEN GREATEST(CLA_CASE.FIRST_CLOSE_DATE, CLA_CASE.RECLOSE_DATE)
      ELSE NULL
    END :: timestamp AS CLAIM_DECLINED_DT,
    CLA_CASE.DECLINE :: INTEGER AS CLAIM_DECLINED_REASON_CD,
    cast(CLA_CASE.DECLINE_REASON as varchar(2000)) AS CLAIM_DECLINED_REASON_COMMENT,
    cast(MST_CLA_DECLINE.DESCRIPTION as varchar(500)) AS CLAIM_DECLINED_REASON_DESC,
    cast(CLA_CASE.DESCRIPTION as varchar(4000)) AS CLAIM_DESC,
    cast(
      CONCAT(CLA_CASE_NO, '|', '101', '|', 'TIA') as varchar(255)
    ) AS CLAIM_ID,
    CLA_CASE.CLA_CASE_NO :: INTEGER AS CLAIM_NUM,
    cast(CLA_CASE.TIMESTAMP as timestamp) AS CLAIM_REGISTRATION_DT,
    cast(NULL as timestamp) AS CLAIM_REPORTED_DT,
    NULL :: INTEGER AS CLAIM_REPORTED_MODE_CD,
    cast(NULL as varchar(500)) AS CLAIM_REPORTED_MODE_DESC,
    cast(CLA_CASE.FIRST_CLOSE_DATE as timestamp) AS CLAIM_SETTLEMENT_DT,
    cast(CLA_CASE.STATUS as varchar(10)) AS CLAIM_STATUS_CD,
    cast(MST_CLA_STATUS.DESCRIPTION as varchar(500)) AS CLAIM_STATUS_DESC,
    cast(
      GREATEST(
        CLA_CASE.FIRST_OPEN_DATE,
        CLA_CASE.FIRST_CLOSE_DATE,
        CLA_CASE.REOPEN_DATE,
        CLA_CASE.RECLOSE_DATE
      ) as timestamp
    ) AS CLAIM_STATUS_DT,
    'CLAIM' AS CLAIM_SUBCLAIM_IND,
    cast(CLA_CASE.CLA_CLASS as varchar(255)) AS CLAIM_TYPE_CD,
    cast(MST_CLA_CLASS1.DESCRIPTION as varchar(500)) AS CLAIM_TYPE_DESC,
    ST.SITE_SEQ_NO AS COMPANY_ID,
    cast(
      CONTRACT_VERSION.CONTRACT_VERSION_ID as varchar(255)
    ) AS CONTRACT_VERSION_ID,
    GENINS_CONTRACT_VERSION.CON_RENEWAL_NUM :: INTEGER AS CONTRACT_YEAR,
    cast(CLA_EVENT.INCIDENT_DATE as timestamp) AS DATE_OF_LOSS,
    NULL :: INTEGER AS EVENT_ADDRESS_ID,
    NULL :: INTEGER AS EVENT_ADDRESS_NUM,
    cast(EVENT.EVENT_TYPE_DESC as varchar(500)) AS EVENT_DESC,
    cast(EVENT.EVENT_ID as varchar(255)) AS EVENT_ID,
    cast(CLA_EVENT.PLACE_TYPE as varchar(255)) AS EVENT_LOCATION_TYPE_CD,
    cast(MST_CLA_PLACE_TYPE.DESCRIPTION as varchar(500)) AS EVENT_LOCATION_TYPE_DESC,
    cast(CLA_CASE.CLA_CASE_NO_ALT as varchar(500)) AS EXTERNAL_CLAIM_NUM,
    cast(CLA_CASE.TIMESTAMP as timestamp) AS INSERT_DATE,
    cast(USER_DETAILS.USER_ID as varchar(255)) AS INSERT_USER,
    cast(CLA_CASE.TIA_COMMIT_DATE as timestamp) AS LAST_UPDATE_DATE,
    cast(USER_DETAILS1.USER_ID as varchar(255)) AS LAST_UPDATE_USER,
    NULL :: INTEGER AS LOB_CD,
    cast(NULL as varchar(500)) AS LOB_DESC,
    cast(CONTRACT_VERSION.PRODUCT_CD as varchar(255)) AS PRODUCT_CD,
    cast(CONTRACT_VERSION.PRODUCT_DESC as varchar(500)) AS PRODUCT_DESC,
    cast(CLA_CASE.REOPEN_REASON as varchar(2000)) AS REOPEN_REASON,
    cast(NULL as decimal(20, 10)) AS TOTAL_CLAIM_AMT_REPORTED_HOME_CUR,
    cast(NULL as decimal(20, 10)) AS TOTAL_CLAIM_AMT_REPORTED_TRAN_CUR,
    NULL :: INTEGER AS TRANS_CURRENCY_CD,
    cast(NULL as varchar(500)) AS TRANS_CURRENCY_DESC,
    CLA_CASE.RECORD_TIMESTAMP AS AUD_TRAN_DT
    FROM
      { schema_tia_ods }.CLA_CASE CLA_CASE
      LEFT JOIN (
        SELECT
          VAL.MST_VAL_SI_CD CODE,
          VAL.MST_VAL_SI_DESC DESCRIPTION,
          MST.SRC_SYS_MST_TBL_NM
        FROM
          { schema_si_dwh }.MST_MAPPING_TABLE_LIST MST,
          { schema_si_dwh }.MST_TABLE_VAL_LIST VAL
        WHERE
          MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
          AND MST.SRC_SYS_MST_TBL_NM = 'CLA_CASE_TYPE'
          AND MST.SRC_SYS_NM = 'TIA'
          AND VAL.MST_VAL_SI_LANGUAGE = 'EN'
      ) MST_CLA_CASE_TYPE ON CLA_CASE.CASE_TYPE = MST_CLA_CASE_TYPE.CODE
      LEFT JOIN (
        SELECT
          VAL.MST_VAL_SI_CD CODE,
          VAL.MST_VAL_SI_DESC DESCRIPTION,
          MST.SRC_SYS_MST_TBL_NM
        FROM
          { schema_si_dwh }.MST_MAPPING_TABLE_LIST MST,
          { schema_si_dwh }.MST_TABLE_VAL_LIST VAL
        WHERE
          MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
          AND MST.SRC_SYS_MST_TBL_NM = 'CLA_CLOSE_CODE'
          AND MST.SRC_SYS_NM = 'TIA'
          AND VAL.MST_VAL_SI_LANGUAGE = 'EN'
      ) MST_CLA_CLOSE_CODE ON CLA_CASE.CLOSE_CODE :: VARCHAR(255) = MST_CLA_CLOSE_CODE.CODE
      LEFT JOIN (
        SELECT
          VAL.MST_VAL_SI_CD CODE,
          VAL.MST_VAL_SI_DESC DESCRIPTION,
          MST.SRC_SYS_MST_TBL_NM
        FROM
          { schema_si_dwh }.MST_MAPPING_TABLE_LIST MST,
          { schema_si_dwh }.MST_TABLE_VAL_LIST VAL
        WHERE
          MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
          AND MST.SRC_SYS_MST_TBL_NM = 'CLA_DECLINE'
          AND MST.SRC_SYS_NM = 'TIA'
          AND VAL.MST_VAL_SI_LANGUAGE = 'EN'
      ) MST_CLA_DECLINE ON CLA_CASE.DECLINE :: VARCHAR(255) = MST_CLA_DECLINE.CODE
      LEFT JOIN (
        SELECT
          VAL.MST_VAL_SI_CD CODE,
          VAL.MST_VAL_SI_DESC DESCRIPTION,
          MST.SRC_SYS_MST_TBL_NM
        FROM
          { schema_si_dwh }.MST_MAPPING_TABLE_LIST MST,
          { schema_si_dwh }.MST_TABLE_VAL_LIST VAL
        WHERE
          MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
          AND MST.SRC_SYS_MST_TBL_NM = 'CLA_STATUS'
          AND MST.SRC_SYS_NM = 'TIA'
          AND VAL.MST_VAL_SI_LANGUAGE = 'EN'
      ) MST_CLA_STATUS ON CLA_CASE.STATUS :: VARCHAR(255) = MST_CLA_STATUS.CODE
      LEFT JOIN (
        SELECT
          VAL.MST_VAL_SI_CD CODE,
          VAL.MST_VAL_SI_DESC DESCRIPTION,
          MST.SRC_SYS_MST_TBL_NM
        FROM
          { schema_si_dwh }.MST_MAPPING_TABLE_LIST MST,
          { schema_si_dwh }.MST_TABLE_VAL_LIST VAL
        WHERE
          MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
          AND MST.SRC_SYS_MST_TBL_NM = 'CLA_CLASS'
          AND MST.SRC_SYS_NM = 'TIA'
          AND VAL.MST_VAL_SI_LANGUAGE = 'EN'
      ) MST_CLA_CLASS1 ON CLA_CASE.CLA_CLASS :: VARCHAR(255) = MST_CLA_CLASS1.CODE
      LEFT JOIN { schema_tia_ods }.AGREEMENT_LINE AGREEMENT_LINE ON CLA_CASE.POLICY_LINE_SEQ_NO = AGREEMENT_LINE.AGR_LINE_SEQ_NO
      LEFT JOIN { schema_si_dwh }.CONTRACT_VERSION CONTRACT_VERSION ON AGREEMENT_LINE.POLICY_SEQ_NO = CONTRACT_VERSION.CONTRACT_VERSION_NUM
      LEFT JOIN { schema_si_dwh }.GENINS_CONTRACT_VERSION GENINS_CONTRACT_VERSION ON CONTRACT_VERSION.CONTRACT_VERSION_ID = GENINS_CONTRACT_VERSION.CONTRACT_VERSION_ID
      INNER JOIN { schema_tia_ods }.CLA_EVENT CLA_EVENT ON CLA_CASE.CLA_EVENT_NO = CLA_EVENT.CLA_EVENT_NO
      LEFT JOIN { schema_si_dwh }.EVENT EVENT ON CLA_CASE.CLA_EVENT_NO = EVENT.EVENT_NUM
      LEFT JOIN (
        SELECT
          VAL.MST_VAL_SI_CD CODE,
          VAL.MST_VAL_SI_DESC DESCRIPTION,
          MST.SRC_SYS_MST_TBL_NM
        FROM
          { schema_si_dwh }.MST_MAPPING_TABLE_LIST MST,
          { schema_si_dwh }.MST_TABLE_VAL_LIST VAL
        WHERE
          MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
          AND MST.SRC_SYS_MST_TBL_NM = 'CLA_PLACE_TYPE'
          AND MST.SRC_SYS_NM = 'TIA'
          AND VAL.MST_VAL_SI_LANGUAGE = 'EN'
      ) MST_CLA_PLACE_TYPE ON CLA_EVENT.PLACE_TYPE :: VARCHAR(255) = MST_CLA_PLACE_TYPE.CODE
      LEFT JOIN { schema_si_dwh }.USER_DETAILS USER_DETAILS ON CLA_CASE.USERID = USER_DETAILS.USER_NUM
      LEFT JOIN { schema_si_dwh }.USER_DETAILS USER_DETAILS1 ON CLA_CASE.RECORD_USERID = USER_DETAILS1.USER_NUM
      LEFT JOIN { schema_tia_ods }.SITE_TABLE ST ON ST.SITE_SEQ_NO = CLA_CASE.SITE_SEQ_NO
UNION

SELECT
	33 AS AUD_BATCH_ID,
	0 AS AUD_IU_FLAG,
	cast(NULL as varchar(255)) AS AUD_SRC_SYS_CD,
	cast(CONCAT(CLA_SUBCASE.CLA_CASE_NO, '|', CLA_SUBCASE_NO, '|', '101', '|', 'TIA') as varchar(500)) AS AUD_SRC_SYS_ID,
	'TIA' AS AUD_SRC_SYS_NM,
	CLA_SUBCASE.RECORD_VERSION::INTEGER AS AUD_SRC_SYS_UPDT_VER_ID,
	2 AS AUD_SUB_BATCH_ID,
	cast(CLA_SUBCASE.SUBCASE_TYPE as varchar(3)) AS CASE_TYPE_CD,
	cast(MST_CLA_SUBCASE_TYPE.DESCRIPTION as varchar(500)) AS CASE_TYPE_DESC,
	cast(NULL as timestamp) AS CLAIM_APPROVAL_DT,
	cast(NULL as varchar(255)) AS CLAIM_CD,
	cast(NULL as varchar(3)) AS CLAIM_CLOSE_REASON_CD,
	cast(NULL as varchar(500)) AS CLAIM_CLOSE_REASON_DESC,
        CASE WHEN CLA_SUBCASE.STATUS = ' DC' THEN GREATEST(CLA_SUBCASE.FIRST_CLOSE_DATE, CLA_SUBCASE.RECLOSE_DATE)
		ELSE NULL
	END::timestamp AS CLAIM_DECLINED_DT,
	NULL::INTEGER AS CLAIM_DECLINED_REASON_CD,
	cast(NULL as varchar(2000)) AS CLAIM_DECLINED_REASON_COMMENT,
	cast(NULL as varchar(500)) AS CLAIM_DECLINED_REASON_DESC,
	cast(CLA_SUBCASE.DESCRIPTION as varchar(4000)) AS CLAIM_DESC,
	cast(CONCAT(CLA_SUBCASE.CLA_CASE_NO, '|', CLA_SUBCASE_NO, '|', '101', '|','TIA') as varchar(255)) AS CLAIM_ID,
	CLA_SUBCASE.CLA_SUBCASE_NO::INTEGER AS CLAIM_NUM,
	cast(CLA_SUBCASE.TIMESTAMP as timestamp) AS CLAIM_REGISTRATION_DT,
	cast(NULL as timestamp) AS CLAIM_REPORTED_DT,
	NULL::INTEGER AS CLAIM_REPORTED_MODE_CD,
	cast(NULL as varchar(500)) AS CLAIM_REPORTED_MODE_DESC,
	cast(CLA_SUBCASE.FIRST_CLOSE_DATE as timestamp) AS CLAIM_SETTLEMENT_DT,
	cast(CLA_SUBCASE.STATUS as varchar(10)) AS CLAIM_STATUS_CD,
	cast(MST_CLA_STATUS1.DESCRIPTION as varchar(500)) AS CLAIM_STATUS_DESC,
	cast(GREATEST(CLA_SUBCASE.FIRST_OPEN_DATE, CLA_SUBCASE.FIRST_CLOSE_DATE, CLA_SUBCASE.REOPEN_DATE, CLA_SUBCASE.RECLOSE_DATE) as timestamp) AS CLAIM_STATUS_DT,
	'SUBCLAIM' AS CLAIM_SUBCLAIM_IND,
	cast(CLA_SUBCASE.CLA_CLASS as varchar(255)) AS CLAIM_TYPE_CD,
	cast(MST_CLA_CLASS1.DESCRIPTION as varchar(500)) AS CLAIM_TYPE_DESC,
	ST.SITE_SEQ_NO AS COMPANY_ID,
	cast(CONTRACT_VERSION5.CONTRACT_VERSION_ID as varchar(255)) AS CONTRACT_VERSION_ID,
	GENINS_CONTRACT_VERSION5.CON_RENEWAL_NUM::INTEGER AS CONTRACT_YEAR,
	cast(CLA_EVENT1.INCIDENT_DATE as timestamp) AS DATE_OF_LOSS,
	NULL::INTEGER AS EVENT_ADDRESS_ID,
	NULL::INTEGER AS EVENT_ADDRESS_NUM,
	cast(EVENT1.EVENT_TYPE_DESC as varchar(500)) AS EVENT_DESC,
	cast(EVENT1.EVENT_ID as varchar(255)) AS EVENT_ID,
	cast(CLA_EVENT1.PLACE_TYPE as varchar(255)) AS EVENT_LOCATION_TYPE_CD,
	cast(MST_CLA_PLACE_TYPE.DESCRIPTION as varchar(500)) AS EVENT_LOCATION_TYPE_DESC,
	cast(NULL as varchar(50)) AS EXTERNAL_CLAIM_NUM,
	cast(CLA_SUBCASE.TIMESTAMP as timestamp) AS INSERT_DATE,
	cast(USER_DETAILS2.USER_ID as varchar(255)) AS INSERT_USER,
	cast(CLA_SUBCASE.TIA_COMMIT_DATE as timestamp) AS LAST_UPDATE_DATE,
	cast(USER_DETAILS3.USER_ID as varchar(255)) AS LAST_UPDATE_USER,
	NULL::INTEGER AS LOB_CD,
	cast(NULL as varchar(500)) AS LOB_DESC,
	cast(CONTRACT_VERSION5.PRODUCT_CD as varchar(255)) AS PRODUCT_CD,
	cast(CONTRACT_VERSION5.PRODUCT_DESC as varchar(500)) AS PRODUCT_DESC,
	cast(CLA_SUBCASE.REOPEN_REASON as varchar(2000)) AS REOPEN_REASON,
	cast(NULL as decimal(20,10)) AS TOTAL_CLAIM_AMT_REPORTED_HOME_CUR,
	cast(NULL as decimal(20,10)) AS TOTAL_CLAIM_AMT_REPORTED_TRAN_CUR,
	NULL::INTEGER AS TRANS_CURRENCY_CD,
	cast(NULL as varchar(500)) AS TRANS_CURRENCY_DESC,
	CLA_SUBCASE.RECORD_TIMESTAMP AS AUD_TRAN_DT
FROM
	{schema_tia_ods}.CLA_SUBCASE CLA_SUBCASE
LEFT JOIN (
	SELECT
		VAL.MST_VAL_SI_CD CODE,
		VAL.MST_VAL_SI_DESC DESCRIPTION,
		MST.SRC_SYS_MST_TBL_NM
	FROM
		{schema_si_dwh}.MST_MAPPING_TABLE_LIST MST,
		{schema_si_dwh}.MST_TABLE_VAL_LIST VAL
	WHERE
		MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
		AND MST.SRC_SYS_MST_TBL_NM = 'CLA_SUBCASE_TYPE'
		AND MST.SRC_SYS_NM = 'TIA'
		AND VAL.MST_VAL_SI_LANGUAGE = 'EN') MST_CLA_SUBCASE_TYPE ON
	CLA_SUBCASE.SUBCASE_TYPE::VARCHAR(500) = MST_CLA_SUBCASE_TYPE.CODE
LEFT JOIN (
	SELECT
		VAL.MST_VAL_SI_CD CODE,
		VAL.MST_VAL_SI_DESC DESCRIPTION,
		MST.SRC_SYS_MST_TBL_NM
	FROM
		{schema_si_dwh}.MST_MAPPING_TABLE_LIST MST,
		{schema_si_dwh}.MST_TABLE_VAL_LIST VAL
	WHERE
		MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
		AND MST.SRC_SYS_MST_TBL_NM = 'CLA_STATUS'
		AND MST.SRC_SYS_NM = 'TIA'
		AND VAL.MST_VAL_SI_LANGUAGE = 'EN')
   MST_CLA_STATUS1 ON
	CLA_SUBCASE.STATUS ::VARCHAR(500) = MST_CLA_STATUS1.CODE
LEFT JOIN (
	SELECT
		VAL.MST_VAL_SI_CD CODE,
		VAL.MST_VAL_SI_DESC DESCRIPTION,
		MST.SRC_SYS_MST_TBL_NM
	FROM
		{schema_si_dwh}.MST_MAPPING_TABLE_LIST MST,
		{schema_si_dwh}.MST_TABLE_VAL_LIST VAL
	WHERE
		MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
		AND MST.SRC_SYS_MST_TBL_NM = 'CLA_CLASS'
		AND MST.SRC_SYS_NM = 'TIA'
		AND VAL.MST_VAL_SI_LANGUAGE = 'EN') MST_CLA_CLASS1 ON
	CLA_SUBCASE.CLA_CLASS ::VARCHAR(500) = MST_CLA_CLASS1.CODE
INNER JOIN {schema_tia_ods}.CLA_CASE CLA_CASE_2 ON
	CLA_SUBCASE.CLA_CASE_NO = CLA_CASE_2.CLA_CASE_NO
LEFT JOIN {schema_tia_ods}.AGREEMENT_LINE AGREEMENT_LINE2 ON
	CLA_CASE_2.POLICY_LINE_SEQ_NO = AGREEMENT_LINE2.AGR_LINE_SEQ_NO
LEFT JOIN {schema_si_dwh}.CONTRACT_VERSION CONTRACT_VERSION5 ON
	AGREEMENT_LINE2.POLICY_SEQ_NO = CONTRACT_VERSION5.CONTRACT_VERSION_NUM
LEFT JOIN {schema_si_dwh}.GENINS_CONTRACT_VERSION GENINS_CONTRACT_VERSION5 ON
	CONTRACT_VERSION5.CONTRACT_VERSION_ID = GENINS_CONTRACT_VERSION5.CONTRACT_VERSION_ID
LEFT JOIN {schema_tia_ods}.CLA_EVENT CLA_EVENT1 ON
	CLA_CASE_2.CLA_EVENT_NO = CLA_EVENT1.CLA_EVENT_NO
LEFT JOIN {schema_si_dwh}.EVENT EVENT1 ON
	CLA_CASE_2.CLA_EVENT_NO = EVENT1.EVENT_NUM
LEFT JOIN (
	SELECT
		VAL.MST_VAL_SI_CD CODE,
		VAL.MST_VAL_SI_DESC DESCRIPTION,
		MST.SRC_SYS_MST_TBL_NM
	FROM
		{schema_si_dwh}.MST_MAPPING_TABLE_LIST MST,
		{schema_si_dwh}.MST_TABLE_VAL_LIST VAL
	WHERE
		MST.MST_TBL_SI_ID = VAL.MST_TBL_SI_CD
		AND MST.SRC_SYS_MST_TBL_NM = 'CLA_PLACE_TYPE'
		AND MST.SRC_SYS_NM = 'TIA'
		AND VAL.MST_VAL_SI_LANGUAGE = 'EN') MST_CLA_PLACE_TYPE ON
	CLA_SUBCASE.CLA_CLASS ::VARCHAR(500) = MST_CLA_PLACE_TYPE.CODE
LEFT JOIN {schema_si_dwh}.USER_DETAILS USER_DETAILS2 ON
	CLA_SUBCASE.USERID = USER_DETAILS2.USER_NUM
LEFT JOIN {schema_si_dwh}.USER_DETAILS USER_DETAILS3 ON
	CLA_SUBCASE.RECORD_USERID = USER_DETAILS3.USER_NUM
LEFT JOIN {schema_tia_ods}.SITE_TABLE ST ON 
ST.SITE_SEQ_NO=CLA_SUBCASE.SITE_SEQ_NO
""").show()

# COMMAND ----------



# COMMAND ----------

# MAGIC %sql
# MAGIC select claim_id,COUNT(*) FROM `omi-catalog`.si_dwh.CLAIMS_DETAILS
# MAGIC group by claim_id
# MAGIC having COUNT(*)>1;

# COMMAND ----------

# MAGIC %sql
# MAGIC select * FROM `omi-catalog`.si_dwh.CLAIMS_DETAILS where claim_id='2826668|101|TIA'

# COMMAND ----------

# MAGIC %sql
# MAGIC select CLA_CASE_NO,COUNT(*) FROM
# MAGIC       `omi-catalog`.tia_ods.CLA_CASE group by CLA_CASE_NO  having COUNT(*)>1;

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT COLUMN_NAME
# MAGIC FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
# MAGIC WHERE OBJECTPROPERTY(OBJECT_ID(CONSTRAINT_SCHEMA + '.' + QUOTENAME(CONSTRAINT_NAME)), 'IsPrimaryKey') = 1
# MAGIC AND TABLE_NAME = `omi-catalog`.si_dwh.claims_details

# COMMAND ----------

# MAGIC %sql 
# MAGIC select count(*),event_num,event_id from `omi-catalog`.si_dwh.event group by event_num,event_id having count(*)>1;

# COMMAND ----------

# MAGIC %sql 
# MAGIC select count(*),cla_event_no from `omi-catalog`.tia_ods.cla_event group by cla_event_no having count(*)>1;
